// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using locacao_veiculo;

#nullable disable

namespace locacao_veiculo.Migrations
{
    [DbContext(typeof(GERVEICULOSContext))]
    partial class GERVEICULOSContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("locacao_veiculo.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("modelo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClienteId" }, "fk_carro_cliente_idx");

                    b.HasIndex(new[] { "Marca" }, "marca_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "Modelo" }, "modelo_UNIQUE")
                        .IsUnique();

                    b.ToTable("carro", (string)null);
                });

            modelBuilder.Entity("locacao_veiculo.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("email");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<int>("Telefone")
                        .HasColumnType("int")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Email" }, "email_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "Telefone" }, "telefone_UNIQUE")
                        .IsUnique();

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("locacao_veiculo.Configuracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("DiasDeLocacao")
                        .HasColumnType("int")
                        .HasColumnName("diasDeLocacao");

                    b.HasKey("Id");

                    b.ToTable("configuracao", (string)null);
                });

            modelBuilder.Entity("locacao_veiculo.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("marca", (string)null);
                });

            modelBuilder.Entity("locacao_veiculo.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("modelo", (string)null);
                });

            modelBuilder.Entity("locacao_veiculo.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Carro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("carro");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cliente_id");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime")
                        .HasColumnName("dataEntrega");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime")
                        .HasColumnName("dataLocacao");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("idCliente");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ClienteId" }, "fk_pedido_cliente1_idx");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("locacao_veiculo.Carro", b =>
                {
                    b.HasOne("locacao_veiculo.Cliente", "Cliente")
                        .WithMany("Carros")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("fk_carro_cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("locacao_veiculo.Pedido", b =>
                {
                    b.HasOne("locacao_veiculo.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteId")
                        .IsRequired()
                        .HasConstraintName("fk_pedido_cliente1");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("locacao_veiculo.Cliente", b =>
                {
                    b.Navigation("Carros");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
